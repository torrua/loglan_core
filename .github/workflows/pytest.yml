name: Pytest

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    env:
      CC_TEST_REPORTER_ID: 0ab46c7acdcb9951ded95c2cb362eeec513807aa51c459b035509daf84e8f81e

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-tests.txt

      - name: Install CodeClimate Test-Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Test with pytest
        run: |
          pytest --cov=loglan_core --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

      - name: Upload coverage to Ocular
        run: |
          ocular --data-file ".coverage" --config-file ".coveragerc"
        continue-on-error: true

      - name: Upload coverage to CodeClimate
        run: |
          ./cc-test-reporter format-coverage -t coverage.py -o coverage/codeclimate.json
          ./cc-test-reporter upload-coverage
        if: success()

      - name: Finish CodeClimate build
        run: |
          ./cc-test-reporter after-build --exit-code 0
        if: always()